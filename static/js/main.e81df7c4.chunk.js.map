{"version":3,"sources":["components/Timer.jsx","components/Countdown.jsx","containers/CountdownContainer.jsx","containers/TabsComponent.jsx","serviceWorker.js","index.jsx","assets/media/timer-end.mp3"],"names":["Timer","props","run","msTime","state","setState","timeToClock","handleStart","active","clearInterval","timerID","setInterval","handleDrop","sTime","mTime","hTime","this","className","onClick","React","PureComponent","Countdown","seconds","allTime","secondsToBeautifulTime","minute","Math","floor","second","handleSliderChange","e","handleSecondsChange","prevTime","Number","target","value","handleMinutesChange","soundPlay","handleStartStop","Audio","music","play","currentValue","progress","round","max","min","onChange","disabled","step","type","placeholder","percent","Component","CountdownContainer","TabsComponent","TabPane","Tabs","defaultActiveKey","tab","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e81df7c4.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\n\nexport default class Timer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msTime: 0,\n      sTime: 0,\n      mTime: 0,\n      hTime: 0,\n      active: false,\n    };\n  }\n\n  run = () => {\n    const { msTime } = this.state;\n    this.setState({ msTime: msTime + 1 });\n    this.timeToClock();\n  }\n\n  handleStart = () => {\n    const { active } = this.state;\n    this.setState({ active: !active });\n    if (!active) {\n      this.timerID = setInterval(() => this.run(), 10);\n    } else {\n      clearInterval(this.timerID);\n    }\n  }\n\n  handleDrop = () => {\n    clearInterval(this.timerID);\n    this.setState({\n      msTime: 0,\n      sTime: 0,\n      mTime: 0,\n      hTime: 0,\n      active: false,\n    });\n  }\n\n  timeToClock = () => {\n    const {\n      msTime, sTime, mTime, hTime,\n    } = this.state;\n    if (mTime === 60) {\n      this.setState({ mTime: 0, hTime: hTime + 1 });\n    }\n    if (sTime === 60) {\n      this.setState({ sTime: 0, mTime: mTime + 1 });\n    }\n    if (msTime === 100) {\n      this.setState({ msTime: 0, sTime: sTime + 1 });\n    }\n  }\n\n  render() {\n    const {\n      msTime, sTime, mTime, hTime, active,\n    } = this.state;\n\n    return (\n      <div>\n        <Button className=\"btn\" onClick={this.handleStart}>{active ? 'Пауза' : 'Запустить'}</Button>\n        <Button className=\"btn\" onClick={this.handleDrop}>Сброс</Button>\n        <div className=\"clock\">\n          {hTime < 10 ? `0${hTime}` : `${hTime}`}\n          {' '}\n          :\n          {mTime < 10 ? ` 0${mTime}` : ` ${mTime}`}\n          {' '}\n          :\n          {sTime < 10 ? ` 0${sTime}` : ` ${sTime}`}\n          {' '}\n          :\n          {msTime < 10 ? ` 0${msTime}` : ` ${msTime}`}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Slider, Progress, Button } from 'antd';\nimport music from '../assets/media/timer-end.mp3';\n\nexport default class Countdown extends React.Component {\n  state = {\n    seconds: 0,\n    active: false,\n    allTime: 0,\n  }\n\n  secondsToBeautifulTime = () => {\n    const { seconds } = this.state;\n    const minute = Math.floor(seconds / 60);\n    return { minute, second: seconds - minute * 60 };\n  }\n\n  handleSliderChange = (e) => {\n    this.setState({\n      seconds: e,\n    });\n  }\n\n  handleSecondsChange = () => (e) => {\n    const { seconds } = this.state;\n    const prevTime = seconds;\n    this.setState({ seconds: prevTime + Number(e.target.value) });\n  }\n\n  handleMinutesChange = () => (e) => {\n    const { seconds } = this.state;\n    const prevTime = seconds;\n    this.setState({ seconds: prevTime + Number(e.target.value) * 60 });\n  }\n\n  run = () => {\n    const {\n      seconds, active,\n    } = this.state;\n    if (seconds === 0) {\n      clearInterval(this.timerID);\n      this.setState({ seconds: seconds - 1, active: !active });\n      this.soundPlay();\n    } else {\n      this.setState({ seconds: seconds - 1 });\n    }\n  }\n\n  handleStartStop = () => {\n    const {\n      seconds, active, allTime,\n    } = this.state;\n    if (allTime === 0) {\n      this.setState({\n        active: !active,\n        allTime: Number(seconds),\n      });\n    } else {\n      this.setState({ active: !active });\n    }\n    if (!active) {\n      this.timerID = setInterval(() => this.run(), 1000);\n    } else {\n      clearInterval(this.timerID);\n    }\n  }\n\n  handleDrop = () => {\n    clearInterval(this.timerID);\n    this.setState({\n      active: 0,\n      seconds: 0,\n      allTime: 0,\n    });\n  }\n\n  soundPlay = () => {\n    const audio = new Audio(music);\n    audio.play();\n  }\n\n  render() {\n    const {\n      seconds, active, allTime,\n    } = this.state;\n    const currentValue = (Number(seconds)) / allTime;\n    const progress = Math.round(100 - currentValue * 100);\n    const { minute, second } = this.secondsToBeautifulTime();\n\n    return (\n      <div>\n        <Slider\n          max={3600}\n          min={0}\n          value={Number(seconds)}\n          onChange={(e) => this.handleSliderChange(e)}\n          disabled={active}\n          step={15}\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"720\"\n          value={minute}\n          onChange={this.handleMinutesChange()}\n          className=\"btn\"\n          placeholder=\"минуты\"\n          disabled={active}\n        />\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          value={second}\n          onChange={this.handleSecondsChange()}\n          className=\"btn\"\n          placeholder=\"секунды\"\n          disabled={active}\n        />\n        <Button\n          className=\"btn\"\n          onClick={this.handleStartStop}\n          disabled={seconds === 0}\n        >\n          {active ? 'Пауза' : 'Старт'}\n        </Button>\n        <Button\n          className=\"btn\"\n          onClick={this.handleDrop}\n          disabled={!allTime}\n        >\n          Сброс\n        </Button>\n        <div className=\"clock\">\n          {minute}\n          {' '}\n          :\n          {second}\n        </div>\n        <Progress\n          type=\"circle\"\n          percent={progress}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Countdown from '../components/Countdown';\n\nexport default class CountdownContainer extends React.PureComponent {\n  render() {\n    return (\n      <Countdown />\n    );\n  }\n}\n","/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport '../assets/styles/App.css';\nimport { Tabs } from 'antd';\nimport Timer from '../components/Timer';\nimport CountdownContainer from './CountdownContainer';\n\nexport default class TabsComponent extends React.Component {\n  render() {\n    const { TabPane } = Tabs;\n\n    return (\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Timer\" key=\"1\">\n          <Timer />\n        </TabPane>\n        <TabPane tab=\"Countdown\" key=\"2\">\n          <CountdownContainer />\n        </TabPane>\n      </Tabs>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TabsComponent from './containers/TabsComponent';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TabsComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/timer-end.6180537e.mp3\";"],"sourceRoot":""}